• Static Animations
    • update TLAS on GPU
	• merge all ShaderInterop shit into a single file because im lazy
• GI
    • https://github.com/NVIDIAGameWorks/RTXGI-DDGI
	• https://github.com/NVIDIA-RTX/RTXGI (?)
• RT Shadows
	• half/quarter res trace (?)
	• improve with 3D motion vector inputs (?)
	• improve with https://github.com/NVIDIA-RTX/STBN (?)
	• improve with https://github.com/NVIDIA-RTX/OMM (?)
• fix all -Wconversion Shader warnings
• fix inverted view-space Z coord
• Reload only dirty PSOs
• Meshlet drawing pipeline
	• https://github.com/microsoft/Xbox-GDK-Samples/tree/main/Samples/Graphics/MeshletInstancing (?)
	• triangle culling (?)
	• use "simplify sloppy" when index reduction limit reached
	• meshlet-level LOD (https://github.com/nvpro-samples/nv_cluster_lod_builder)
• Anti-Aliasing
	• TAA: https://github.com/microsoft/Xbox-GDK-Samples/tree/main/Samples/Graphics/TemporalAntialiasing
	• FSR: https://github.com/GPUOpen-LibrariesAndSDKs/FidelityFX-SDK/blob/main/docs/techniques/super-resolution-upscaler.md
• Render Graph:
	• Culling of unused resources and passes in the graph
	• Resource States handling
		• disable 'keepInitialState' in nvrhi Texture & Buffer Descs, & 'setEnableAutomaticBarriers' to false for command lists in IRenderers
	• Resource Aliasing
		• resource lifetime management & tracking
	• Scheduling of asynchronous compute fences
• local lights
	• http://newq.net/dl/pub/SA2014Practical.pdf
    • https://simoncoenen.com/blog/programming/graphics/SpotlightCulling
    • https://wickedengine.net/2018/01/optimizing-tile-based-light-culling/
	• clustered deferred lighting: Adria\Rendering\ClusteredDeferredLightingPass.cpp
	• Forward Plus Renderer: "D3D12_Research\Graphics\Techniques\ForwardRenderer.cpp"
• GPU Driven Base Pass Renderer
	• support batching of meshes via binning
• Transparent support
	• OIT: https://learnopengl.com/Guest-Articles/2020/OIT/Weighted-Blended
	• improve with translucent Shadows
• separate top mip streaming
    • integrate D3DX12Residency into nvrhi
    • utilize 'SDL_AsyncIOFromFile' for async mip reading
    • Sampler Feedback Streaming: https://github.com/GameTechDev/SamplerFeedbackStreaming
	• https://wickedengine.net/2024/06/texture-streaming/
	• accelerate with https://github.com/microsoft/DirectStorage
• volumetric clouds
• Skinning:
	• https://learnopengl.com/Guest-Articles/2020/Skeletal-Animation
    • https://wickedengine.net/2017/09/skinning-in-compute-shader/
• Terrain: https://learnopengl.com/Guest-Articles/2021/Tessellation/Height-map
• Compute Queue
    • async XeGTAO
    • async GPU Culling
	• async buffer clears (?)
• Area Lights: https://learnopengl.com/Guest-Articles/2022/Area-Lights
• Lens Flare
• Volumetric Lighting
  • https://github.com/NVIDIAGameWorks/VolumetricLighting
  • https://github.com/GameTechDev/OutdoorLightScattering
• volumetric fog: "D3D12_Research\Graphics\Techniques\VolumetricFog.cpp"
• Visibility Buffer
    • http://filmicworlds.com/blog/visibility-buffer-rendering-with-material-graphs/
    • \D3D12_Research\Resources\Shaders\Visibility*
	• https://github.com/microsoft/Xbox-GDK-Samples/tree/main/Samples/Graphics/VisibilityBuffer/VisibilityBuffer
• AMD Stochastic Screen-Space Reflections: https://github.com/GPUOpen-LibrariesAndSDKs/FidelityFX-SDK/blob/main/docs/techniques/stochastic-screen-space-reflections.md
• VRS
  • https://github.com/microsoft/DirectX-Graphics-Samples/blob/master/Samples/Desktop/D3D12VariableRateShading/readme.md
  • https://github.com/GPUOpen-LibrariesAndSDKs/FidelityFX-SDK/blob/main/docs/techniques/variable-shading.md
• Depth of Field: https://github.com/GPUOpen-LibrariesAndSDKs/FidelityFX-SDK/blob/main/docs/techniques/depth-of-field.md
• Utilize Bent Normals from XeGTAO to further attenuate lighting
• Workgraphs
	• https://github.com/NVIDIA-RTX/Donut-Samples/tree/main/examples/work_graphs
    • convert occlusion culling chain dispatches
	• extend deferred lighting with different shading models (copy-paste brdfs from UE5 lol)
• Hybrid Stochastic Reflections
	• https://github.com/GPUOpen-LibrariesAndSDKs/FidelityFX-SDK/blob/main/docs/samples/hybrid-reflections.md
• Pathtracing
	• https://github.com/NVIDIA-RTX/RTXPT
	